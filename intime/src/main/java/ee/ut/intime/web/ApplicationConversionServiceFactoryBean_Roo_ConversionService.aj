// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.ut.intime.web;

import ee.ut.intime.domain.AppUser;
import ee.ut.intime.domain.Subject;
import ee.ut.intime.domain.UsedTime;
import ee.ut.intime.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<AppUser, String> ApplicationConversionServiceFactoryBean.getAppUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ee.ut.intime.domain.AppUser, java.lang.String>() {
            public String convert(AppUser appUser) {
                return new StringBuilder().append(appUser.getPassword()).append(' ').append(appUser.getUsername()).append(' ').append(appUser.getEMail()).append(' ').append(appUser.getOpenIdIdentifier()).toString();
            }
        };
    }
    
    public Converter<Long, AppUser> ApplicationConversionServiceFactoryBean.getIdToAppUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ee.ut.intime.domain.AppUser>() {
            public ee.ut.intime.domain.AppUser convert(java.lang.Long id) {
                return AppUser.findAppUser(id);
            }
        };
    }
    
    public Converter<String, AppUser> ApplicationConversionServiceFactoryBean.getStringToAppUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ee.ut.intime.domain.AppUser>() {
            public ee.ut.intime.domain.AppUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AppUser.class);
            }
        };
    }
    
    public Converter<Subject, String> ApplicationConversionServiceFactoryBean.getSubjectToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ee.ut.intime.domain.Subject, java.lang.String>() {
            public String convert(Subject subject) {
                return new StringBuilder().append(subject.getCode()).append(' ').append(subject.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Subject> ApplicationConversionServiceFactoryBean.getIdToSubjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ee.ut.intime.domain.Subject>() {
            public ee.ut.intime.domain.Subject convert(java.lang.Long id) {
                return Subject.findSubject(id);
            }
        };
    }
    
    public Converter<String, Subject> ApplicationConversionServiceFactoryBean.getStringToSubjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ee.ut.intime.domain.Subject>() {
            public ee.ut.intime.domain.Subject convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Subject.class);
            }
        };
    }
    
    public Converter<UsedTime, String> ApplicationConversionServiceFactoryBean.getUsedTimeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ee.ut.intime.domain.UsedTime, java.lang.String>() {
            public String convert(UsedTime usedTime) {
                return new StringBuilder().append(usedTime.getWorkDate()).append(' ').append(usedTime.getHours()).toString();
            }
        };
    }
    
    public Converter<Long, UsedTime> ApplicationConversionServiceFactoryBean.getIdToUsedTimeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ee.ut.intime.domain.UsedTime>() {
            public ee.ut.intime.domain.UsedTime convert(java.lang.Long id) {
                return UsedTime.findUsedTime(id);
            }
        };
    }
    
    public Converter<String, UsedTime> ApplicationConversionServiceFactoryBean.getStringToUsedTimeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ee.ut.intime.domain.UsedTime>() {
            public ee.ut.intime.domain.UsedTime convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UsedTime.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAppUserToStringConverter());
        registry.addConverter(getIdToAppUserConverter());
        registry.addConverter(getStringToAppUserConverter());
        registry.addConverter(getSubjectToStringConverter());
        registry.addConverter(getIdToSubjectConverter());
        registry.addConverter(getStringToSubjectConverter());
        registry.addConverter(getUsedTimeToStringConverter());
        registry.addConverter(getIdToUsedTimeConverter());
        registry.addConverter(getStringToUsedTimeConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
